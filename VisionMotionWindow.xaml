<Window x:Class="UaaSolutionWpf.VisionMotionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UaaSolutionWpf"
        xmlns:tcm="clr-namespace:testConfigurableMachine;assembly=testConfigurableMachine"
        xmlns:controls="clr-namespace:UaaSolutionWpf.Controls"
        xmlns:eziiolibs="clr-namespace:EzIIOLibControl.Controls;assembly=EzIIOLibControl"
        xmlns:ScottPlot="clr-namespace:ScottPlot.WPF;assembly=ScottPlot.WPF"
        mc:Ignorable="d"
        Title="Vision Motion Control System" Height="855" Width="1600"
        Loaded="Window_Loaded">
    <Grid Margin="0,0,0,8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="800" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Motion Control Header -->
        <StackPanel Grid.Column="0" Grid.Row="0" Margin="10,5,10,10" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="155"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <controls:AutoAlignerControlV2 x:Name="AutoAlignmentControl" Grid.Column="0" />

                <!-- Add ScottPlot Chart -->
                <ScottPlot:WpfPlot x:Name="AlignmentPlot" Grid.Column="1" Grid.RowSpan="2"
                            Margin="10,0,0,0" 
                            Background="White"/>
            </Grid>
            
        </StackPanel>
        <!-- Motion Control Tabs -->
        <TabControl Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Margin="10,0,10,0" x:Name="MotionControlTabControl">
            <TabItem >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/RUN.png" Width="60" Height="60" Margin="0,0,5,0"/>
                       
                    </StackPanel>
                </TabItem.Header>
                <TabItem.Resources>
                    <!-- This style will apply to all buttons within this TabItem only -->
                    <Style TargetType="Button">
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="FontFamily" Value="Segoe UI"/>
                    </Style>
                </TabItem.Resources>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="300"/> 
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    
                    <Button x:Name="RestHomeButton" Content="Reset To Home" Grid.Column="0" Grid.Row="0" Margin="5" Padding="5" Click="RestHomeButton_Click"/>
                    <Button x:Name="MovetoProbesButton" Content="Move to Probes SLED/PIC" Grid.Column="0" Grid.Row="1" Margin="5" Padding="5" Click="MovetoProbesButton_Click"/>
                    <Button x:Name="PickLeftLensButton" Content="Pick/Place Left Lens" Grid.Column="0" Grid.Row="2" Margin="5" Padding="5" Click="PickLeftLensButton_Click"/>
                    <Button x:Name="PickRightLensButton" Content="Pick/Place Right Lens" Grid.Column="0" Grid.Row="3" Margin="5" Padding="5" Click="PickRightLensButton_Click"/>
                    <Button x:Name="MoveToUVButton" Content="Move to UV and curing" Grid.Column="0" Grid.Row="4" Margin="5" Padding="5" Click="MoveToUVButton_Click"/>
                    <Button x:Name="ExecuteUVButton" IsEnabled="false" Content="Execute UV curing" Grid.Column="0" Grid.Row="5" Margin="5" Padding="5" Click="ExecuteUVButton_Click"/>
                    <Button x:Name="UnloadButton" IsEnabled="false" Content="Unload parts" Grid.Column="0" Grid.Row="6" Margin="5" Padding="5" Click="UnloadButton_Click"/>

                    <TextBlock x:Name="DryValueText" Grid.Column="1" Grid.Row="4" Margin="5" Padding="5" Text="dry=" FontWeight="Bold" FontSize="24"/>
                    <TextBlock x:Name="UvValueText" Grid.Column="1" Grid.Row="5" Margin="5" Padding="5" Text="af_uv=" FontWeight="Bold" FontSize="24"/>
                    <TextBlock x:Name="UvValueText2" Grid.Column="1" Grid.Row="6" Margin="5" Padding="5" Text="af_uv2=" FontWeight="Bold" FontSize="24"/>
                </Grid>
            </TabItem>

            <TabItem >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/IO.png" Width="60" Height="60" Margin="0,0,5,0"/>

                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Left side - Bottom IO Control -->
                    <StackPanel x:Name="ioBottomPanel" Margin="5" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                        <!-- Output Pins with ScrollViewer -->
                        <Border BorderBrush="LightGray" BorderThickness="1" Margin="0,0,0,5">
                            <ScrollViewer MaxHeight="300" VerticalScrollBarVisibility="Auto">
                                <eziiolibs:IOPinMonitorControl x:Name="outputPinMonitorIOBottom"
                             HeaderText="Output Pins - IOBottom"
                             IsOutput="True"/>
                            </ScrollViewer>
                        </Border>

                        <!-- Input Pins with ScrollViewer -->
                        <Border BorderBrush="LightGray" BorderThickness="1">
                            <ScrollViewer MaxHeight="300" VerticalScrollBarVisibility="Auto">
                                <eziiolibs:IOPinMonitorControl x:Name="inputPinMonitorIOBottom"
                            HeaderText="Input Pins - IOBottom"
                            IsOutput="False"/>
                            </ScrollViewer>
                        </Border>
                    </StackPanel>

                    <!-- Right side - Top IO Control -->
                    <StackPanel x:Name="ioTopPanel" Margin="5" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                        <!-- Output Pins with ScrollViewer -->
                        <Border BorderBrush="LightGray" BorderThickness="1" Margin="0,0,0,5">
                            <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto">
                                <eziiolibs:IOPinMonitorControl x:Name="outputPinMonitorIOTop"
                            HeaderText="Output Pins - IOTop"
                            IsOutput="True"/>
                            </ScrollViewer>
                        </Border>

                        <!-- Input Pins with ScrollViewer -->
                        <Border BorderBrush="LightGray" BorderThickness="1">
                            <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto">
                                <eziiolibs:IOPinMonitorControl x:Name="inputPinMonitorIOTop"
                           HeaderText="Input Pins - IOTop"
                           IsOutput="False"/>
                            </ScrollViewer>
                        </Border>
                    </StackPanel>

                    <!-- Additional controls for I/O tab -->
                    <StackPanel Grid.Column="2" Grid.Row="0" Margin="5">
                        <GroupBox Header="Quick Actions" Margin="0,0,0,10">
                            <WrapPanel Margin="5" x:Name="QuickSlidesPanel">
                                <!-- Toggle switches will be added here dynamically -->
                                
                            </WrapPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>
      
            <TabItem IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/teach.png" Width="60" Height="60" Margin="0,0,5,0"/>

                    </StackPanel>
                </TabItem.Header>

                <TabControl x:Name="DevicesTabControl" Margin="5">
                    <!-- Tabs will be added dynamically when devices are connected -->
                                      
                    <TabItem Header="No Devices" x:Name="NoDevicesTab">
                        <TextBlock Text="No motion devices are connected. Please initialize the motion system." 
                       TextWrapping="Wrap" Margin="20" VerticalAlignment="Center" />
                    </TabItem>
                </TabControl>


            </TabItem>
            
            
            
            <!-- Manual Move -->
            <TabItem x:Name="GantryGripperTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/maintenance.jpg" Width="60" Height="60" Margin="0,0,5,0"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left Column -->
                    <StackPanel Grid.Column="0" Margin="5">
                        <!-- Gantry Control Group (Minimized) -->
                        <Expander Header="Gantry Control" IsExpanded="True" Margin="0,0,0,5">
                            <StackPanel Margin="5">
                                <UniformGrid Columns="3" Rows="4">
                                    <Button x:Name="GantryHomeButton" Content="Home" Margin="2" Padding="3" Click="GantryHomeButton_Click"/>
                                    <Button x:Name="GantryDispense1Button" Content="Dispense 1" Margin="2" Padding="3" Click="GantryDispense1Button_Click"/>
                                    <Button x:Name="GantryDispense2Button" Content="Dispense 2" Margin="2" Padding="3" Click="GantryDispense2Button_Click"/>
                                    <Button x:Name="GantryUVButton" Content="UV" Margin="2" Padding="3" Click="GantryUVButton_Click"/>
                                    <Button x:Name="GantrySLEDButton" Content="👁️ SLED" Margin="2" Padding="3" Click="GantrySLEDButton_Click"/>
                                    <Button x:Name="GantryPICButton" Content="👁️ PIC" Margin="2" Padding="3" Click="GantryPICButton_Click"/>
                                    <Button x:Name="GantrySNButton" Content="👁️ SN" Margin="2" Padding="3" Click="GantrySNButton_Click"/>
                                    <Button x:Name="GantrySeeGripCollimateLens" Content="👁️🤏 Coll Lens" Margin="2" Padding="3" Click="GantrySeeGripCollimateLens_Click"/>
                                    <Button x:Name="GantrySeeGripFocusLens" Content="👁️🤏 Focus Lens" Margin="2" Padding="3" Click="GantrySeeGripFocusLens_Click"/>
                                    <Button x:Name="GantrySeePlaceCollLens" Content="👁️ Coll Lens" Margin="2" Padding="3" Click="GantrySeePlaceCollLens_Click"/>
                                    <Button x:Name="GantrySeePlaceFocusLens" Content="👁️ Focus Lens" Margin="2" Padding="3" Click="GantrySeePlaceFocusLens_Click"/>
                                </UniformGrid>

                                <!-- Dispense Settings (Compact) -->
                                <GroupBox Header="Dispense Settings" Margin="0,5,0,5">
                                    <Grid Margin="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="Time:" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <Slider x:Name="DispenseTimeSlider" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="5000" Value="1000" Margin="0,2"/>
                                        <TextBlock x:Name="DispenseTimeLabel" Text="1.0s" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="5,0,0,0"/>

                                        <Button x:Name="DispenseButton" Content="Dispense" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" 
                                    Margin="0,5,0,0" HorizontalAlignment="Left" Width="100" Padding="3" 
                                    Background="#FFD0EAFF" Click="DispenseButton_Click"/>
                                    </Grid>
                                </GroupBox>
                            </StackPanel>
                        </Expander>

                        <!-- Left Gripper Control (Minimized) -->
                        <Expander Header="Left Gripper Control" IsExpanded="True" Margin="0,0,0,5">
                            <StackPanel Margin="5">
                                <UniformGrid Columns="3" Rows="2">
                                    <Button x:Name="LeftGripperHomeButton" Content="Home" Margin="2" Padding="3" Click="LeftGripperHomeButton_Click"/>
                                    <Button x:Name="LeftGripLensButton" Content="Grip Lens" Margin="2" Padding="3" Click="LeftGripLensButton_Click"/>
                                    <Button x:Name="LeftApproachPlaceButton" Content="Approach Place" Margin="2" Padding="3" Click="LeftApproachPlaceButton_Click"/>
                                    <Button x:Name="LeftReleaseLensButton" Content="Place Lens" Margin="2" Padding="3" Click="LeftReleaseLensButton_Click"/>
                                    <Button x:Name="LeftRejectLensButton" Content="Reject Lens" Margin="2" Padding="3" Click="LeftRejectLensButton_Click"/>
                                </UniformGrid>

                                <Grid Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="GripLeftButton" Content="Grip" Grid.Column="0" Padding="3" Margin="2" 
                                Background="#FFD0EAFF" Click="GripLeftButton_Click"/>
                                    <Button x:Name="UngripLeftButton" Content="Release" Grid.Column="1" Padding="3" Margin="2" 
                                Background="#FFFFD0D0" Click="UngripLeftButton_Click"/>
                                    <TextBlock x:Name="LeftGripperStatusText" Text="Not gripping" Grid.Column="2" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <!-- UV Control (Minimized) -->
                        <Expander Header="UV Control" IsExpanded="True" Margin="0,0,0,5">
                            <StackPanel Margin="5">
                                <UniformGrid Columns="2" Rows="2">
                                    <Button x:Name="ActivateUVHeaderButton" Content="Activate UV Header" Margin="2" Padding="3" 
                                Background="#FFD0EAFF" Click="ActivateUVHeaderButton_Click"/>
                                    <Button x:Name="TriggerUV1Button" Content="Trigger UV1" Margin="2" Padding="3" 
                                Background="#FFC6E2FF" Click="TriggerUV1Button_Click"/>
                                    <Button x:Name="TriggerUV2Button" Content="Trigger UV2" Margin="2" Padding="3" 
                                Background="#FFC6E2FF" Click="TriggerUV2Button_Click"/>
                                    <Button x:Name="DeactivateUvHead" Content="Trigger UV1+UV2" Margin="2" Padding="3" 
                                Background="#FFB8DBFF" Click="DeactivateUvHead_Click"/>
                                </UniformGrid>

                                
                            </StackPanel>
                        </Expander>
                    </StackPanel>

                    <!-- Right Column -->
                    <StackPanel Grid.Column="1" Margin="5">
                        <!-- Right Gripper Control (Minimized) -->
                        <Expander Header="Right Gripper Control" IsExpanded="True" Margin="0,0,0,5">
                            <StackPanel Margin="5">
                                <UniformGrid Columns="3" Rows="2">
                                    <Button x:Name="RightGripperHomeButton" Content="Home" Margin="2" Padding="3" Click="RightGripperHomeButton_Click"/>
                                    <Button x:Name="RightGripLensButton" Content="Grip Lens" Margin="2" Padding="3" Click="RightGripLensButton_Click"/>
                                    <Button x:Name="RightApproachPlaceButton" Content="Approach Place" Margin="2" Padding="3" Click="RightApproachPlaceButton_Click"/>
                                    <Button x:Name="RightReleaseLensButton" Content="Place Lens" Margin="2" Padding="3" Click="RightReleaseLensButton_Click"/>
                                    <Button x:Name="RightRejectLensButton" Content="Reject Lens" Margin="2" Padding="3" Click="RightRejectLensButton_Click"/>
                                </UniformGrid>

                                <Grid Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="GripRightButton" Content="Grip" Grid.Column="0" Padding="3" Margin="2" 
                                Background="#FFD0EAFF" Click="GripRightButton_Click"/>
                                    <Button x:Name="UngripRightButton" Content="Release" Grid.Column="1" Padding="3" Margin="2" 
                                Background="#FFFFD0D0" Click="UngripRightButton_Click"/>
                                    <TextBlock x:Name="RightGripperStatusText" Text="Not gripping" Grid.Column="2" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <!-- Vacuum Control (Minimized) -->
                        <Expander Header="Vacuum Control" IsExpanded="True" Margin="0,0,0,5">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="VacuumOnButton" Content="Vacuum On" Grid.Column="0" Padding="3" Margin="2" 
                            Background="#FFD0EAFF" Click="VacuumOnButton_Click"/>
                                <Button x:Name="VacuumOffButton" Content="Vacuum Off" Grid.Column="1" Padding="3" Margin="2" 
                            Background="#FFFFD0D0" Click="VacuumOffButton_Click"/>
                            </Grid>
                        </Expander>

                        <!-- Placeholder for future controls or status information -->
                        <GroupBox Header="Status Information" Margin="0,0,0,5">
                            <StackPanel Margin="5">
                                <TextBlock Text="System Ready" FontWeight="Bold"/>
                                <TextBlock Text="No active operations" Margin="0,5,0,0"/>
                                <!-- Add more status information here as needed -->
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Dispensing Calibration" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Header -->
                    <StackPanel Grid.Row="0" Margin="0,0,0,10"/>


                </Grid>
            </TabItem>
        </TabControl>

        <!-- Initialize Button Panel -->
        <StackPanel Grid.Column="0" Grid.Row="3" Margin="10">
            <Button Content="Initialize Motion System" Click="InitializeMotionSystem_Click" Margin="0,0,0,5" Padding="5"/>
            <Button Content="Stop All Devices" Click="StopAllDevices_Click" Margin="0,0,0,5" Padding="5"/>
        </StackPanel>

        <!-- Vision Control Header -->
        <StackPanel Grid.Column="1" Grid.Row="0" Margin="10,5,10,10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!-- Global Jog Control -->
                <ContentPresenter x:Name="GlobalJogContentPresenter" Grid.Column="0"/>
            </Grid>

        </StackPanel>

        <!-- Vision Control Tabs -->
        <TabControl Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Margin="10" x:Name="VisionControlTabControl">
            <TabItem Header="Camera Control" IsSelected="True">
                <!-- Camera Control Panel -->
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Camera Controls -->
                    <Grid Grid.Row="0" Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Connection Controls -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,5">
                            <Button x:Name="ConnectCameraButton" Content="Connect Camera" Click="ConnectCamera_Click" Margin="0,0,10,0" Padding="10,5"/>
                            <Button x:Name="StartLiveViewButton" Content="Start Live View" Click="StartLiveView_Click" Margin="0,0,10,0" Padding="10,5" IsEnabled="False"/>
                            <Button x:Name="StopLiveViewButton" Content="Stop Live View" Click="StopLiveView_Click" Margin="0,0,10,0" Padding="10,5" IsEnabled="False"/>
                            <Button x:Name="DisconnectCameraButton" Content="Disconnect Camera" Click="DisconnectCamera_Click" Margin="0,0,10,0" Padding="10,5" IsEnabled="False"/>
                        </StackPanel>

                        <!-- Vision-Motion Integration Controls -->
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <!-- Update the EnableClickToMoveCheckBox element to include the Click event handler -->
                            <CheckBox x:Name="EnableClickToMoveCheckBox" Content="Enable Click-to-Move" 
                                      Margin="0,0,10,0" VerticalAlignment="Center" IsEnabled="true"
                                      Click="EnableClickToMoveCheckBox_CheckedChanged" Checked="EnableClickToMoveCheckBox_Checked"/>
                            <TextBlock Text="Click on the image to move gantry to that position" VerticalAlignment="Center" Foreground="Gray"/>
                        </StackPanel>
                    </Grid>

                    <!-- Camera View -->
                    <!-- Camera View -->
                    <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1" Margin="0,0,0,10">
                        <Grid Background="Black" 
                              x:Name="ImageControlGrid" 
                              MouseMove="ImageControlGrid_MouseMove" 
                              MouseLeave="ImageControlGrid_MouseLeave">
                            <!-- Camera Image -->
                            <Image x:Name="CameraImage" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            <!-- Canvas Overlay for Visualization -->
                            <Canvas x:Name="VisualizationOverlay" Width="{Binding ActualWidth, ElementName=CameraImage}" 
                Height="{Binding ActualHeight, ElementName=CameraImage}"
                HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            <Canvas x:Name="CrosshairCanvas" 
                                    IsHitTestVisible="False" 
                                    Background="Transparent">
                                <Line x:Name="HorizontalCrosshairLine" 
                                      Stroke="Cyan" 
                                      StrokeThickness="1" 
                                      Visibility="Collapsed"/>
                                <Line x:Name="VerticalCrosshairLine" 
                                      Stroke="Cyan" 
                                      StrokeThickness="1" 
                                      Visibility="Collapsed"/>

                                <!-- Static Center Crosshair (Yellow) -->
                                <Line x:Name="StaticHorizontalCrosshairLine" 
                                        Stroke="Yellow" 
                                        StrokeThickness="1"/>
                                <Line x:Name="StaticVerticalCrosshairLine" 
                                        Stroke="Yellow" 
                                        StrokeThickness="1"/>

                            </Canvas>

                            <!-- No Camera Text -->
                            <TextBlock x:Name="NoCameraTextBlock" Text="No camera connected" 
                   Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                   FontSize="16" FontWeight="Bold"/>
                        </Grid>
                    </Border>

                    <!-- Camera Settings -->
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Camera Info -->
                        <StackPanel Grid.Column="0">
                            <ScrollViewer MaxHeight="60" VerticalScrollBarVisibility="Auto">
                                <TextBlock x:Name="CameraInfoTextBlock" Text="Camera: Not connected" 
                   TextWrapping="Wrap" Margin="0,0,0,5"/>
                            </ScrollViewer>
                            <TextBlock x:Name="CameraStatsTextBlock" Text="Stats: --" Margin="0,0,0,5"/>
                        </StackPanel>

                        <!-- Zoom Controls -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Text="Zoom:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <Button x:Name="ZoomOutButton" Content="-" Click="ZoomOut_Click" Width="30" Margin="0,0,5,0" IsEnabled="False"/>
                            <TextBlock x:Name="ZoomTextBlock" Text="100%" VerticalAlignment="Center" MinWidth="50" TextAlignment="Center"/>
                            <Button x:Name="ZoomInButton" Content="+" Click="ZoomIn_Click" Width="30" Margin="5,0,0,0" IsEnabled="False"/>
                            <Button x:Name="ZoomResetButton" Content="Reset" Click="ZoomReset_Click" Width="50" Margin="10,0,0,0" IsEnabled="False"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Vision Settings">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Camera Settings Controls -->
                </Grid>
            </TabItem>
        </TabControl>

        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                      Grid.Column="2" Grid.Row="1" Grid.RowSpan="3">

            <StackPanel x:Name="RightSidePanel">
                <controls:KeithleyCurrentControl x:Name="keithleyCurrentControl" Margin="5"/>
                
            </StackPanel>

        </ScrollViewer>

        <GroupBox Grid.Column="2" Header="Real-Time Data Monitor" Margin="0,0,0,10">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Channel selection combo box -->
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Select Channel:" 
                       VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" x:Name="ChannelSelectionComboBox" 
                      Margin="0,5" DisplayMemberPath="ChannelName" 
                      SelectionChanged="ChannelSelectionComboBox_SelectionChanged"/>

                <!-- Current value display -->
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Current Value:" 
                       VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="CurrentValueTextBlock" 
                       VerticalAlignment="Center" Text="--" FontWeight="Bold"/>
                <TextBlock Grid.Row="1" Grid.Column="2" x:Name="CurrentValueUnitTextBlock" 
                       VerticalAlignment="Center" Margin="5,0,0,0" Text=""/>

                <!-- Target value display -->
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Target Value:" 
                       VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBlock Grid.Row="2" Grid.Column="1" x:Name="TargetValueTextBlock" 
                       VerticalAlignment="Center" Text="--"/>
                <TextBlock Grid.Row="2" Grid.Column="2" x:Name="TargetValueUnitTextBlock" 
                       VerticalAlignment="Center" Margin="5,0,0,0" Text=""/>

                <!-- Progress bar showing percentage of target -->
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Progress:" 
                       VerticalAlignment="Center" Margin="0,10,10,0"/>
                <ProgressBar x:Name="TargetProgressBar" 
                         Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"
                         Height="20" 
                         Minimum="0" 
                         Maximum="200" 
                         Value="0"
                         Margin="0,10,0,0"/>

                <!-- Percentage text -->
                <TextBlock Grid.Row="4" Grid.Column="0" Text="Target Achievement:" 
                       VerticalAlignment="Center" Margin="0,5,10,0"/>
                <TextBlock x:Name="PercentageTextBlock" 
                       Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"
                       Text="0.0%" 
                       FontWeight="Bold"
                       Margin="0,5,0,0"/>
            </Grid>
        </GroupBox>


        <!-- Status Bar -->
        <StatusBar Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" VerticalAlignment="Bottom" FontSize="24">
            <StatusBarItem>
                <TextBlock x:Name="StatusBarTextBlock" Text="Ready to initialize"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>